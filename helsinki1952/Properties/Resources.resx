<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Forrás" xml:space="preserve">
    <value>1 1 atletika kalapacsvetes	
1 1 uszas 400m_gyorsuszas
1 1 birkozas kotott_fogas_legsuly
1 1 torna talajtorna
1 1 torna felemas_korlat
1 1 vivas kardvivas_egyeni
1 1 okolvivas nagyvaltosuly
1 1 uszas 200m_melluszas
1 1 birkozas kotott_fogas_valtosuly
1 1 uszas 100m_gyorsuszas
1 1 sportloveszet onmukodo_sportpisztoly
1 15 labdarugas ferfi_csapat
1 3 ottusa ferfi_csapat
1 6 vivas kardvivas_csapat
1 5 uszas 4x100m_gyorsuszo_valto
1 13 vizilabda ferfi_csapat
2 1 ottusa ottusa_egyeni
2 1 vivas torvivas_egyeni
2 1 vivas kardvivas_egyeni
2 1 sportloveszet onmukodo_sportpisztoly
2 1 uszas 400m_gyorsuszas
2 1 uszas 200m_melluszas
2 1 kajakkenu kenu_egyes_10000m
2 1 kajakkenu kajak_egyes_1000m
2 1 birkozas kotott_fogas_pehelysuly
2 8 torna noi_osszetett_csapat
3 1 sportloveszet sportpisztoly
3 1 vivas kardvivas_egyeni
3 1 atletika tavolugras
3 1 birkozas szabad_fogas_kozepsuly
3 1 torna felemas_korlat
3 1 torna osszetett_egyeni
3 1 torna gerenda
3 1 torna talajtorna
3 1 atletika kalapacsvetes
3 1 atletika 50km_gyaloglas
3 1 ottusa ottusa_egyeni
3 1 uszas 100m_gyorsuszas
3 4 atletika 4x100m_valtofutas
3 2 kajakkenu kenu_kettes_10000m
3 8 torna keziszer_csapat
3 6 vivas torvivas_csapat
4 1 torna gerenda
4 1 uszas 200m_mell
4 1 birkozas kotottfogas_felnehezsuly
4 1 torna talaj
4 1 birkozas kotottfogas_kozepsuly
4 1 birkozas kotottfogas_konnyusuly
5 1 okolvivas pehelysuly
5 1 okolvivas konnyusuly
5 1 uszas 100m_gyors
5 1 atletika diszkoszvetes
5 1 vivas parbajtor_egyeni
5 2 kajak–kenu kenu_kettes_1000m
5 2 kerekparozas ketuleses_verseny
5 4 uszas 4×200m_gyorsvalto
5 5 vivas parbajtor_csapat
6 1 birkozas kotottfogas_legsuly
6 1 kajak–kenu kajak_egyes_500m
6 1 torna osszetett_egyeni
6 1 kerekparozas repuloverseny
6 1 uszas 400m_gyors
6 1 torna felemaskorlat
6 8 torna osszetett_csapat</value>
  </data>
</root>